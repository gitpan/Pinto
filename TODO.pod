=head1 HIGH PRIORITY

=over 4

=item Contemplate API for getting/opening/committing stacks

=item Heirarchy of exception classes

=item Move repository configuration into the DB

=item Write more test cases for Stack operations

=item Re-examine log mechanism

=item Create a hook mechanism to do stuff before or after an Action

=item Create command to populate repository from current modules in @INC

=item Create command to dump repository to a file

=item Create command to load repository from a dump

=item Create command to unregister a pkg/dist

=item Create command to diff two stacks or revisions

=item Refactor the Initializer class

=back

=head1 MEDIUM PRORITY

=over 4

=item Improve locking mechanism (one lock per stack, maybe in db).

=item Consider pinning at dist level, not pkg

=item Create command to list dependors and dependants

=item Create command to verify prereqs on a stack

=item Create command to list outdated packages

=item Stack property: target perl version

=item Stack property: source repositories

=item Stack property: allow devel releases

=item Repo property: log level

=item Repo property: default sources

=item Repo property: default target perl version

=item Repo property: default devel option

=item Profile and look for performance optimizations.

=item Prettier stack listing and stack prop listing

=item Verify archive checksums during 'verify'

=item Standardize API, using named parameters except where it makes sense not to.

=item Tests, tests, tests.

=back

=head1 LOW PRIORITY

=over 4

=item Optimize generation of CHECKSUMS files.

=item Way to pin/unpin all packages in a stack

=item Improve Perl::Critic compliance.

=item Document, document, document.

=item Look for better ways to use Moose roles.

=back

=head1 QUESTIONABLE

=over 4

=item Give revisions properties

=item Allow revisions to be tagged

=item Try to ensure integrity of commits (what does this mean?)

=item Stack property: strict (no overlapping dists)

=item Add versioning to the stack props

=item Consider using natural keys for package/dists.

=item Make the Store transactional

=item Extract versioning stuff to a separate dist.

=item Rewrite tests with Test::Class

=item Attribute to indicate if package was explicitly requested for stack

=item Mark stacks as merged after merge

=item Mark stacks as deleted after delete

=item Warn if an unmerged stack is being deleted

=back

=head1 SCRAPPED

=over 4

=item Generate a RECENT file.

=item Command options to specify provided/required packages (maybe not)

=item Enable plugins for visiting and filtering.

=item news: list recent additions. maybe something from Changes file

=item ack: Do an ack command across all distributions

=item look: Unpack archive in temp dir and launch shell there

=back

=cut
